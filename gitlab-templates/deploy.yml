.default_deploy_script: &default_deploy_script
  - export RELEASE_TAG=$(cat .version)
  - |
    curl -X PUT $VERSION_MANAGER_URL/update-image \
    -u $VERSION_MANAGER_AUTH \
    -H "Secret: $VERSION_MANAGER_API_SECRET" \
    -H "Content-Type: application/json" \
    --data '{ "service": "'$CI_PROJECT_NAME'", "image": "'$CI_REGISTRY_IMAGE':'$RELEASE_TAG'" }'

.default_trigger: &default_trigger
  stage: deploy
  trigger:
    project: mein-recycling/deployment
    strategy: depend
  when: on_success
  needs:
    - job: deploy-dev
  variables:
    TRIGGER_SPECIFIC_JOB: $CI_PROJECT_NAME

deploy-dev:
  stage: deploy
  script: *default_deploy_script
  variables:
    VERSION_MANAGER_URL: $DEV_VERSION_MANAGER_URL
    VERSION_MANAGER_AUTH: $DEV_VERSION_MANAGER_AUTH
    VERSION_MANAGER_API_SECRET: $DEV_VERSION_MANAGER_API_SECRET
  when: manual

trigger-deploy-dev:
  stage: deploy
  trigger:
    project: mein-recycling/deployment
    strategy: depend
    branch: dev
  when: on_success
  needs:
    - job: deploy-dev
  variables:
    TRIGGER_SPECIFIC_JOB: $CI_PROJECT_NAME
    TRIGGER_ENVIRONMENT: "dev"

deploy-prod:
  stage: deploy
  script: *default_deploy_script
  variables:
    VERSION_MANAGER_URL: $PROD_VERSION_MANAGER_URL
    VERSION_MANAGER_AUTH: $PROD_VERSION_MANAGER_AUTH
    VERSION_MANAGER_API_SECRET: $PROD_VERSION_MANAGER_API_SECRET
  when: manual

trigger-deploy-prod:
  stage: deploy
  trigger:
    project: mein-recycling/deployment
    strategy: depend
    branch: prod
  when: on_success
  needs:
    - job: deploy-dev
  variables:
    TRIGGER_SPECIFIC_JOB: $CI_PROJECT_NAME
    TRIGGER_ENVIRONMENT: "prod"
